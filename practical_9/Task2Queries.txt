1. 
    a)
        MATCH (n:Person {name:"@Neo"})-[:FOLLOWS|POSTED|REPOSTED|LIKED*1..2]->(post:Post)
        RETURN DISTINCT post.hashtag AS Hashtag, post.message AS Message;

    b)
        MATCH path = shortestPath((melanie:Person {name:"@Melanie"})-[*]-(neo:Person {name:"@Neo"}))
        RETURN path;

    c)
        MATCH (p:Person)-[:POSTED]->(post:Post)
        OPTIONAL MATCH (:Person)-[r:REPOSTED]->(post)
        WITH p.name AS Person, post.hashtag AS Hashtag, COUNT(r) > 0 AS HasBeenReposted
        RETURN Person, Hashtag, HasBeenReposted
        ORDER BY Person;

    d)
        MATCH path = shortestPath((melanie:Person {name:"@Melanie"})-[:FOLLOWS*]->(neo:Person {name:"@Neo"}))
        RETURN path;

2.
    a)
        MATCH (n)
        RETURN COUNT(n) AS TotalNodes;

    b)
        MATCH (p:Person)-[:FOLLOWS]->(other:Person)
        RETURN p.name AS Person, COUNT(other) AS FollowsCount
        ORDER BY FollowsCount DESC;

    c)
        MATCH (follower:Person)-[r:FOLLOWS]->(followed:Person)
        WHERE r.since = 2014
        RETURN followed.name AS Person, COUNT(follower) AS FollowersSince2014
        ORDER BY FollowersSince2014 DESC;

    d)
        MATCH (follower:Person)-[:FOLLOWS]->(followed:Person)
        WITH followed.name AS Person, COUNT(follower) AS Followers
        ORDER BY Followers DESC
        LIMIT 1
        RETURN Person, Followers;
